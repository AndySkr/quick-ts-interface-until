/** @format */

"use strict";

var _regeneratorRuntime = require("@babel/runtime/regenerator");

var _asyncToGenerator = require("@babel/runtime/helpers/asyncToGenerator");

var _require = require("quicktype-core"),
  t = _require.quicktype,
  e = _require.InputData,
  n = _require.JSONInput,
  r = _require.jsonInputForTargetLanguage,
  o = require("fs"),
  s = require("axios"),
  i = require("chalk");

var a = {};

module.exports = /*#__PURE__*/ (function () {
  var _ref = _asyncToGenerator(
    /*#__PURE__*/ _regeneratorRuntime.mark(function _callee2(n) {
      var _c$charAt, c, u, _yield, p, l;

      return _regeneratorRuntime.wrap(
        function _callee2$(_context2) {
          while (1) {
            switch ((_context2.prev = _context2.next)) {
              case 0:
                if (!n) {
                  _context2.next = 17;
                  break;
                }

                _context2.prev = 1;
                _context2.next = 4;
                return (function (t) {
                  return new Promise(function (e, n) {
                    s.post(t)
                      .then(function (t) {
                        var _t$data;

                        var n =
                          (_t$data = t.data) === null || _t$data === void 0
                            ? void 0
                            : _t$data.responseVo;
                        (a = n), e(n);
                      })
                      ["catch"](function (t) {
                        throw (
                          (console.log(
                            i.keyword("red")("=========》接口请求异常")
                          ),
                          t)
                        );
                      });
                  });
                })(n);

              case 4:
                c =
                  n === null || n === void 0
                    ? void 0
                    : n.split("/").slice(-1)[0];
                u =
                  (c === null || c === void 0
                    ? void 0
                    : (_c$charAt = c.charAt(0)) === null || _c$charAt === void 0
                    ? void 0
                    : _c$charAt.toUpperCase()) + c.slice(1);
                _context2.next = 8;
                return (function () {
                  var _ref2 = _asyncToGenerator(
                    /*#__PURE__*/ _regeneratorRuntime.mark(function _callee(
                      n,
                      o
                    ) {
                      var s, i;
                      return _regeneratorRuntime.wrap(function _callee$(
                        _context
                      ) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              s = r("typescript");
                              _context.next = 3;
                              return s.addSource({
                                name: n,
                                samples: [o],
                              });

                            case 3:
                              i = new e();
                              i.addInput(s);
                              _context.next = 7;
                              return t({
                                inputData: i,
                                lang: "typescript",
                                rendererOptions: {
                                  "just-types": !0,
                                },
                              });

                            case 7:
                              return _context.abrupt("return", _context.sent);

                            case 8:
                            case "end":
                              return _context.stop();
                          }
                        }
                      },
                      _callee);
                    })
                  );

                  return function (_x2, _x3) {
                    return _ref2.apply(this, arguments);
                  };
                })()(u || "Type", JSON.stringify(a));

              case 8:
                _yield = _context2.sent;
                p = _yield.lines;
                l = p === null || p === void 0 ? void 0 : p.join("\n");
                o.writeFile("type.d.ts", l, function (t) {
                  if (t) throw t;
                  console.log(
                    i.keyword("orange")(
                      "==>==>==>==>==> * * * * * Successful! * * * * * <==<==<==<==<=="
                    )
                  );
                });
                _context2.next = 17;
                break;

              case 14:
                _context2.prev = 14;
                _context2.t0 = _context2["catch"](1);
                throw _context2.t0;

              case 17:
              case "end":
                return _context2.stop();
            }
          }
        },
        _callee2,
        null,
        [[1, 14]]
      );
    })
  );

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})();
